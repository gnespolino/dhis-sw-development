services:
  master:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_master"
    shm_size: 1g
    image: 'citus-postgis:latest'
    ports: [ "${COORDINATOR_EXTERNAL_PORT:-5432}:5432" ]
    labels: [ 'com.citusdata.role=Master' ]
    external_links:
      - worker:worker
    environment: &PG_ENV
      ROLE: "master"
      POSTGRES_USER: "${POSTGRES_USER:-dhis}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${POSTGRES_USER:-dhis}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB:-dhis}"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
    volumes:
      - master-volume:/var/lib/postgresql/data
    restart: unless-stopped
  worker:
    image: 'citus-postgis:latest'
    shm_size: 1g
    labels: [ 'com.citusdata.role=Worker' ]
    external_links:
      - master:master
    depends_on: [ manager ]
    environment:
      ROLE: "worker"
      POSTGRES_USER: "${POSTGRES_USER:-dhis}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${POSTGRES_USER:-dhis}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB:-dhis}"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck
      - worker-volume:/var/lib/postgresql/data
    restart: unless-stopped
  manager:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_manager"
    image: 'citusdata/membership-manager:0.3.0'
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
    depends_on: [ master ]
    environment: *PG_ENV
    restart: unless-stopped
volumes:
  healthcheck-volume:
  master-volume:
  worker-volume:
